---
source: crates/compiler/cypress/tests/test_parse.rs
description: "f : (Str, Str) -> (Str, Str)\nf = \\x -> x\n\nf (1, 2)\n"
---
(BeginFile
    (BeginTopLevelDecls
        (BeginTypeOrTypeAlias
            Ident=>LowerIdent@0
            InlineTypeColon=>OpColon@1
            (*
                (BeginParens TypeName=>UpperIdent@3 TypeName=>UpperIdent@5 EndParens)
                InlineTypeArrow=>OpArrow@7
                (BeginParens TypeName=>UpperIdent@9 TypeName=>UpperIdent@11 EndParens)
            EndTypeLambda)
        EndTypeOrTypeAlias)
        (BeginAssign
            Ident=>LowerIdent@13
            InlineAssign=>OpAssign@14
            (BeginLambda
                Ident=>LowerIdent@16
                InlineLambdaArrow=>OpArrow@17
                Ident=>LowerIdent@18
            EndLambda)
        EndAssign)
        (*
            HintExpr
            Ident=>LowerIdent@19
            InlineApply=>LowerIdent@19
            (BeginParens Num=>Int@21 Num=>Int@23 EndParens)
        EndApply)
    EndTopLevelDecls)
EndFile)

[=== canfmt below ===]
TypeAlias(Ident("f"), Lambda([Tuple([Name("Str"), Name("Str")])], Tuple([Name("Str"), Name("Str")])))
Assign(Ident("f"), Lambda([Ident("x")], Ident("x")))
Apply(Ident("f"), [Tuple([IntBase10("1"), IntBase10("2")])])

[=== formatted below ===]

