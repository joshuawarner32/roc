---
source: crates/compiler/parse/src/cypress.rs
description: "f : a -> (b -> c) where a implements Hash, b implements Eq, c implements Ord\n\nf\n"
---
(BeginFile
    (BeginTopLevelDecls
        (BeginTypeOrTypeAlias
            Ident=>LowerIdent@0
            InlineTypeColon=>OpColon@1
            (*
                (*
                    Ident=>LowerIdent@2
                    InlineLambdaArrow=>OpArrow@3
                    ((*
                            BeginParens
                            Ident=>LowerIdent@5
                            InlineLambdaArrow=>OpArrow@6
                            Ident=>LowerIdent@7
                        EndTypeLambda)
                    EndParens)
                EndTypeLambda)
                InlineKwWhere=>KwWhere@9
                Ident=>LowerIdent@10
                InlineKwImplements=>KwImplements@11
                AbilityName=>UpperIdent@12
                Ident=>LowerIdent@14
                InlineKwImplements=>KwImplements@15
                AbilityName=>UpperIdent@16
                Ident=>LowerIdent@18
                InlineKwImplements=>KwImplements@19
                AbilityName=>UpperIdent@20
            EndWhereClause)
        EndTypeOrTypeAlias)
        HintExpr
        Ident=>LowerIdent@21
    EndTopLevelDecls)
EndFile)

[=== canfmt below ===]
TypeAlias(Ident("f"), WhereClause(Lambda([Name("a")], Lambda([Name("b")], Name("c"))), [(Name("a"), Name("Hash")), (Name("b"), Name("Eq")), (Name("c"), Name("Ord"))]))
Ident("f")

[=== formatted below ===]

